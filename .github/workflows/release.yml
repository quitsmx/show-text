# Publish a new release if there's a version change in package.json

name: Release

on:
  push:
    branches: [main]
    paths: ['package.json']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  publish_release:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.check.outputs.tag }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
          ref: main

      - name: Check version change
        uses: salsify/action-detect-and-tag-new-version@v2
        id: check

      # Drafts your next Release notes as Pull Requests are merged into "main"
      - name: Publish release
        if: steps.check.outputs.tag
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: true
          generateReleaseNotesPreviousTag: ${{ env.PREV_TAG == 'v' && ''  || env.PREV_TAG }}
          updateOnlyUnreleased: true
          tag: ${{ steps.check.outputs.tag }}
        env:
          PREV_TAG: v${{ steps.check.outputs.previous-version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: repub

  # This is needed because https://github.com/actions/create-release/issues/71
  call_deploy:
    needs: publish_release
    if: needs.publish_release.outputs.tag_name != ''
    permissions:
      contents: write
      id-token: write
      packages: write
    uses: ./.github/workflows/deploy.yml
    with:
      tag_name: ${{ needs.publish_release.outputs.tag_name }}
